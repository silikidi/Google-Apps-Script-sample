/************************************************************************************************
* Salin ke file Code.gs atau file .gs tersendiri di Apps Script
* Base64url Parameter Deep Linking Telegram
* https://telegram-bot-script.blogspot.com/2021/10/base64url-parameter-deep-linking-telegram.html
*************************************************************************************************/
const telegramAPIToken = "API_TOKEN_BOT_ANDA";
const telegramAPIURL = "https://api.telegram.org/bot" + telegramAPIToken;
const telegramAdminID = "ID_USER_ANDA";
const googleWebAppsURL = "URL_WEB_APPS_ANDA";


/***************************************************************
* getMe() untuk request info tentang bot *
* setWebHook() untuk membangun push system realtime dengan bot *
****************************************************************/
function getMe() {
  var url = telegramAPIURL + "/getMe";
  var response = UrlFetchApp.fetch(url);
  Logger.log(response.getContentText());
}
function setWebhook() {
  var url = telegramAPIURL + "/setWebhook?url=" + googleWebAppsURL;
  var response = UrlFetchApp.fetch(url);
  Logger.log(response.getContentText());
}
function deleteWebhook() {
  var url = telegramAPIURL + "/deleteWebhook";
  var response = UrlFetchApp.fetch(url);
  Logger.log(response.getContentText());
}


/*********************
* FUNGSI KIRIM PESAN *
**********************/
function kirimPesan( targetID, pesan ) {
  var dataPesan = {
    method: "post",
    payload: {
      method: "sendMessage",
      chat_id: String( targetID ),
      text: String( pesan )
    }
  };
  UrlFetchApp.fetch(telegramAPIURL + "/", dataPesan);   
}


/*******************************
* ENCODE DECODE BASE64 WEBSAFE *
********************************/
function konversiBase64( base64Opsi, base64Data ) {
  
  var base64Hasil = "";

  if ( base64Opsi && base64Opsi !== "" ) {
    if ( base64Opsi.toUpperCase() === "ENCODE" ) {
      
      base64Hasil = Utilities.base64EncodeWebSafe( base64Data );

    } else if ( base64Opsi.toUpperCase() === "DECODE" ) {

      /***** https://stackoverflow.com/a/35002237/12682081 *****/
      var base64regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;

      if ( base64regex.test( base64Data ) ) {
        
        var base64Decode = Utilities.base64DecodeWebSafe( base64Data );
        base64Hasil = Utilities.newBlob( base64Decode ).getDataAsString();

      }

    }
  } 

  return base64Hasil;

}


/***********************************
* EKSTRAK PARAMETER KE DALAM OBJEK *
************************************/
function ekstrakParameter( parameter ) {
  
  if ( parameter.includes( "&" ) && parameter.includes( "=" ) ){
    
    let parameterSplit = parameter.split( "&" );
    let parameterObjek = {};

    for ( let i = 0; i < parameterSplit.length; i++ ) {
      let parameterPart = parameterSplit[i].split( "=" );
      parameterObjek[ parameterPart[0] ] = parameterPart[1];
    }

    return parameterObjek;

  } else return false;

}


/*********
* TESTER *
**********/
function tesKonversiBase64(){
  
  const parameter = "brand=dArt vEddEr&price=2,500 US$&discount=45%";

  let parameterDecode = konversiBase64( "decode", konversiBase64( "encode", parameter ) );
  let parameterObjek = ekstrakParameter( parameterDecode );

  Logger.log( "ORIGINAL : " + parameter );
  Logger.log( "BASE64WEBSAFE-ENCODE : " + konversiBase64( "encode", parameter ) );
  Logger.log( "BASE64WEBSAFE-DECODE : " + konversiBase64( "decode", konversiBase64( "encode", parameter ) ) );
  for ( let properti in parameterObjek ) {
    Logger.log( `${ properti }: ${ parameterObjek[ properti ] }` );
  }
  for ( let [key, value] of Object.entries( parameterObjek ) ) {
    Logger.log( `${key}: ${value}` );
  }
  Logger.log( parameterObjek.price );
  Logger.log( Object.keys( parameterObjek ) );
  Logger.log( Object.values( parameterObjek ) );

}


/*************************************************************
* FUNGSI PENERIMA KIRIMAN DATA DARI TELEGRAM API VIA WEBHOOK *
**************************************************************/
function doPost(e) {

  const data = JSON.parse( e.postData.contents );

  try {      

    if ( (( data || {} ).message || {}).text ){
        
      var pesan =
        "<b>" + "TIDAK ADA PARAMETER TERDETEKSI " + "</b>" + "\n" + "\n"
        + "Private Chat gunakan link berikut: " + "\n"
        + "<a href='https://t.me/pertamakubot?start=AloHaloOo'>t.me/pertamakubot?start=AloHaloOo</a>" + "\n" + "\n"
        + "Group Chat pilih atau ketik command: " + "\n" + "/startalohalooo@pertamakubot";

      if ( data.message.text.substring(0, 6) === "/start" && data.message.text.match(/\/start(.*)/).pop() !== "" ) {
      
        var dataText = data.message.text.match(/\/start(.*)/).pop().trim();
        //var dataText = data.message.text.toLowerCase().match(/\/start(.*)/).pop().trim();
        
        if ( dataText.includes( "@" ) ) {
          
          if ( dataText.split( "@" ).shift() !== "" ) pesan = "Parameter Command [GROUP]: " + "<b>" + dataText.split( "@" ).shift()+ "</b>";

        } else {
          
          if ( konversiBase64( "decode", dataText ) !== "" ) {
            
            let botUsername = "pertamakubot";
            let parameterDecode = konversiBase64( "decode", dataText );

            if ( !ekstrakParameter( parameterDecode ) ) {
              
              pesan = "Parameter tidak sesuai format parameter URL!";

            } else {
              
              let parameterObjek = ekstrakParameter( parameterDecode );
              
              pesan = 
                "URL: " + "\n" + "https://t.me/" + botUsername + "?start=" + dataText + "\n" + "\n"
                + "PARAMETER: " + "\n" + "<b>" + dataText + "</b>" + "\n" + "\n"
                + "HASIL KONVERSI: ";

              for ( let [key, value] of Object.entries( parameterObjek ) ) {
                pesan += "\n" + `${key}: <b>${value}</b>`;
              }

            }
            
          } else pesan = "Parameter bukan hasil enkoding Base64!";
        }
      }

      var dataParameter = {
        method: "post",
        payload: {
          method: "sendMessage",
          chat_id: String( data.message.chat.id ),
          parse_mode: "HTML",
          disable_web_page_preview: "true",
          text: String( pesan )
        }
      };
      UrlFetchApp.fetch( telegramAPIURL + "/", dataParameter );

    }
  
  } catch(e) { kirimPesan( telegramAdminID, e ); }

}
